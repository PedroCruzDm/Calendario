import React from "react";
import {db} from './../../hooks/FireBase/firebaseconfig.js';
import { doc, deleteDoc } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-firestore.js";
import './Styles/style.css';

const EventModal = ({ event, onClose, onDeleteEvento }) => {
    return(
        <div className="modal_event">
            <div className="modal_event_container">
                <div className="modal_event_header">
                    <h2>{event.title}</h2>
                    <button onClick={onClose} className="modal_event_close">X</button>
                </div>

                <div className="modal_event_body">
                    <h2>{event.title}</h2>
                    <p>Tipo: {event.type}</p>
                    <p>Descrição: {event.desc}</p>
                    <p>Início: {event.start.toString()}</p>
                    <p>Fim: {event.end.toString()}</p>
                    <p>Nível de importancia: {event.important}</p>
                </div>

                <div className="modal_event_buttons">
                    <button className="modal_event_edit" onClick={() => setModalEditVisible(true)}>Editar</button>
                    <button className="modal_event_delete" onClick={() => handleDelete(event, onDeleteEvento, onClose)}>Excluir</button>
                </div>
        
            </div>
        </div>

        
    );
}

const handleDelete = async (event, onDeleteEvento, onClose) => {
    try {
        // Referência do documento que será excluído
        const docRef = doc(db, "eventos", event.id);
        await deleteDoc(docRef); // Deleta o evento do Firestore

        if (onDeleteEvento) {
            onDeleteEvento(event.id); // Atualiza o estado local
        }

        onClose(); // Fecha o modal
    } catch (error) {
        console.error("Erro ao excluir evento:", error);
    }
};

export default EventModal;